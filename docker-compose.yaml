services:

  frigate:
    image: ghcr.io/blakeblackshear/frigate:${FRIGATE_VERSION:-stable}
    extends:
      file: hardware-acceleration.yaml
      service: hardware-acceleration
    network_mode: ${NETWORK_MODE:-bridge}
    shm_size: ${SHM_SIZE:-64mb}
    env_file: environment.d/frigate.env
    ports:
      - ${AUTH_PORT:-8971}:8971
      - ${WEB_PORT:-5000}:5000
      - ${RTMP_PORT:-1935}:1935
      - ${WEBRTC_PORT:-8555}:8555/tcp
      - ${WEBRTC_PORT:-8555}:8555/udp
    devices:
      - /dev/bus/usb:/dev/bus/usb
    volumes:
      - frigate-database:/db
      - ${FRIGATE_MODEL_CACHE_PATH:-frigate-model-cache}:/config/model_cache
      - ./volumes/frigate/config.yaml:/config/config.yaml
      - ${CLIPS_PATH?:Clips path must be defined}:/media/frigate/clips
      - ${RECORDINGS_PATH:?Recordings path must be defined}:/media/frigate/recordings
      - /etc/localtime:/etc/localtime:ro
      - type: tmpfs
        target: /tmp/cache
        tmpfs:
          size: ${TMPFS_CACHE_SIZE:-1000000000}
    labels:
      com.centurylinklabs.watchtower.scope: ${COMPOSE_PROJECT_NAME}
    restart: unless-stopped

  watchtower:
    image: containrrr/${WATCHTOWER_VERSION:-watchtower}
    env_file: environment.d/watchtower.env
    environment:
      WATCHTOWER_SCOPE: ${COMPOSE_PROJECT_NAME}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
    labels:
      com.centurylinklabs.watchtower.scope: ${COMPOSE_PROJECT_NAME}
    restart: unless-stopped

volumes:
  frigate-database: {}
  frigate-model-cache: {}
